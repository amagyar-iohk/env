name: Run

run-name: Run [${{ github.event.inputs.component }}]

on:
  workflow_dispatch: 
    inputs:
      component:
        description: component - a;m;s1;s2;s3

jobs:
  main:
    name: "Main"
    runs-on: ubuntu-latest

    outputs:
      s1: ${{ steps.components.outputs.s1 }}
      s2: ${{ steps.components.outputs.s2 }}
      s3: ${{ steps.components.outputs.s3 }}

    steps:
      - uses: actions/checkout@v4

      - name: "test main"
        run: echo running main

      - name: specify components
        id: components
        env:
          COMPONENT: ${{ github.event.inputs.component }}
        run: |
          node generate.js
          echo s1: $(jq '.s1' env.json)
          echo s2: $(jq '.s2' env.json)
          echo s3: $(jq '.s3' env.json)
          
          echo "s1=$(jq -r '.s1' env.json)" >> "$GITHUB_OUTPUT"
          echo "s2=$(jq -r '.s2' env.json)" >> "$GITHUB_OUTPUT"
          echo "s3=$(jq -r '.s3' env.json)" >> "$GITHUB_OUTPUT"
          echo "test=test" >> "$GITHUB_OUTPUT"

  s1:
    needs: main
    if: needs.main.outputs.s1  == 'enabled'
    name: "component s1"
    runs-on: ubuntu-latest

    env:
      COMPONENT: ${{ github.event.inputs.component }}

    steps:
      - uses: actions/checkout@v4

      - name: "run component s1"
        working-directory: tests
        run: |
          echo running component s1 for $COMPONENT
          npm i
          npm test

      - name: Save results
        uses: actions/upload-artifact@v4
        with:
          name: s1-results
          path: tests/allure-results
          retention-days: 1

  s2:
    needs: main
    if: needs.main.outputs.s2  == 'enabled'
    name: "component s2"
    runs-on: ubuntu-latest
    env:
      COMPONENT: ${{ github.event.inputs.component }}
    steps:
      - uses: actions/checkout@v4

      - name: "run component s2"
        working-directory: tests
        run: |
          echo running component s2 for $COMPONENT
          npm i
          npm test
      - name: Save results
        uses: actions/upload-artifact@v4
        with:
          name: s2-results
          path: tests/allure-results
          retention-days: 1

  s3:
    needs: main
    if: needs.main.outputs.s3  == 'enabled'
    name: "component s3"
    runs-on: macos-latest
    env:
      COMPONENT: ${{ github.event.inputs.component }}
    steps:
      - uses: actions/checkout@v4

      - name: "run component s3"
        working-directory: tests
        run: |
          echo running component s3 for $COMPONENT
          npm i
          npm test
      - name: Save results
        uses: actions/upload-artifact@v4
        with:
          name: s3-results
          path: tests/allure-results
          retention-days: 1

  aggregate:
    if: always()
    needs: [s1,s2,s3]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: s1 results
        if: needs.s1.result != 'skipped'
        uses: actions/download-artifact@v4
        with:
          name: s1-results
          path: tmp

      - name: s2 results
        if: needs.s2.result != 'skipped'
        uses: actions/download-artifact@v4
        with:
          name: s2-results
          path: tmp

      - name: s3 results
        if: needs.s3.result != 'skipped'
        uses: actions/download-artifact@v4
        with:
          name: s3-results
          path: tmp

      - name: run report
        working-directory: allure-generator
        run: |
          npm i
          npx allure generate ../tmp -o ../aggregated-report --name ${{ github.event.inputs.component }}

      - name: Save results
        uses: actions/upload-artifact@v4
        with:
          name: aggregated-report
          path: aggregated-report
          retention-days: 1